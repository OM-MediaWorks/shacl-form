var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});var __defProp2=Object.defineProperty,__name2=__name((target,value)=>__defProp2(target,"name",{value,configurable:!0}),"__name");class MapSet extends Map{set(key,value){return super.set(key,value),value}}__name(MapSet,"MapSet");__name2(MapSet,"MapSet");class WeakMapSet extends WeakMap{set(key,value){return super.set(key,value),value}}__name(WeakMapSet,"WeakMapSet");__name2(WeakMapSet,"WeakMapSet");const{isArray:isArray$2}=Array,sync=__name2((values,i)=>{const resolved=[];for(const{length}=values;i<length;i++)resolved.push(isArray$2(values[i])?sync(values[i],0):values[i]);return Promise.all(resolved)},"sync"),asyncTag=__name2(tag2=>{function invoke(template,values){return tag2.apply(this,[template].concat(values))}return __name(invoke,"invoke"),__name2(invoke,"invoke"),function(template){return sync(arguments,1).then(invoke.bind(this,template))}},"asyncTag");/*! (c) Andrea Giammarchi - ISC */const empty=/^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i,elements=/<([a-z]+[a-z0-9:._-]*)([^>]*?)(\/?)>/g,attributes=/([^\s\\>"'=]+)\s*=\s*(['"]?)\x01/g,holes=/[\x01\x02]/g,instrument=__name2((template,prefix2,svg2)=>{let i=0;return template.join("").trim().replace(elements,(_,name,attrs,selfClosing)=>{let ml=name+attrs.replace(attributes,"=$2$1").trimEnd();return selfClosing.length&&(ml+=svg2||empty.test(name)?" /":"></"+name),"<"+ml+">"}).replace(holes,hole=>hole===""?"<!--"+prefix2+i+++"-->":prefix2+i++)},"instrument"),ELEMENT_NODE=1,nodeType=111,remove=__name2(({firstChild,lastChild})=>{const range=document.createRange();return range.setStartAfter(firstChild),range.setEndAfter(lastChild),range.deleteContents(),firstChild},"remove"),diffable=__name2((node,operation)=>node.nodeType===nodeType?1/operation<0?operation?remove(node):node.lastChild:operation?node.valueOf():node.firstChild:node,"diffable"),persistent=__name2(fragment=>{const{firstChild,lastChild}=fragment;if(firstChild===lastChild)return lastChild||fragment;const{childNodes}=fragment,nodes=[...childNodes];return{ELEMENT_NODE,nodeType,firstChild,lastChild,valueOf(){return childNodes.length!==nodes.length&&fragment.append(...nodes),fragment}}},"persistent"),{isArray:isArray$1}=Array,aria=__name2(node=>values=>{for(const key in values){const name=key==="role"?key:`aria-${key}`,value=values[key];value==null?node.removeAttribute(name):node.setAttribute(name,value)}},"aria"),getValue=__name2(value=>value==null?value:value.valueOf(),"getValue"),attribute=__name2((node,name)=>{let oldValue,orphan=!0;const attributeNode=document.createAttributeNS(null,name);return newValue=>{const value=getValue(newValue);oldValue!==value&&((oldValue=value)==null?orphan||(node.removeAttributeNode(attributeNode),orphan=!0):(attributeNode.value=value,orphan&&(node.setAttributeNodeNS(attributeNode),orphan=!1)))}},"attribute"),boolean=__name2((node,key,oldValue)=>newValue=>{const value=!!getValue(newValue);oldValue!==value&&((oldValue=value)?node.setAttribute(key,""):node.removeAttribute(key))},"boolean"),data=__name2(({dataset})=>values=>{for(const key in values){const value=values[key];value==null?delete dataset[key]:dataset[key]=value}},"data"),event=__name2((node,name)=>{let oldValue,lower,type=name.slice(2);return!(name in node)&&(lower=name.toLowerCase())in node&&(type=lower.slice(2)),newValue=>{const info=isArray$1(newValue)?newValue:[newValue,!1];oldValue!==info[0]&&(oldValue&&node.removeEventListener(type,oldValue,info[1]),(oldValue=info[0])&&node.addEventListener(type,oldValue,info[1]))}},"event"),ref=__name2(node=>{let oldValue;return value=>{oldValue!==value&&(oldValue=value,typeof value=="function"?value(node):value.current=node)}},"ref"),setter=__name2((node,key)=>key==="dataset"?data(node):value=>{node[key]=value},"setter"),text=__name2(node=>{let oldValue;return newValue=>{const value=getValue(newValue);oldValue!=value&&(oldValue=value,node.textContent=value??"")}},"text"),udomdiff=__name2((parentNode,a,b,get,before)=>{const bLength=b.length;let aEnd=a.length,bEnd=bLength,aStart=0,bStart=0,map=null;for(;aStart<aEnd||bStart<bEnd;)if(aEnd===aStart){const node=bEnd<bLength?bStart?get(b[bStart-1],-0).nextSibling:get(b[bEnd-bStart],0):before;for(;bStart<bEnd;)parentNode.insertBefore(get(b[bStart++],1),node)}else if(bEnd===bStart)for(;aStart<aEnd;)(!map||!map.has(a[aStart]))&&parentNode.removeChild(get(a[aStart],-1)),aStart++;else if(a[aStart]===b[bStart])aStart++,bStart++;else if(a[aEnd-1]===b[bEnd-1])aEnd--,bEnd--;else if(a[aStart]===b[bEnd-1]&&b[bStart]===a[aEnd-1]){const node=get(a[--aEnd],-1).nextSibling;parentNode.insertBefore(get(b[bStart++],1),get(a[aStart++],-1).nextSibling),parentNode.insertBefore(get(b[--bEnd],1),node),a[aEnd]=b[bEnd]}else{if(!map){map=new Map;let i=bStart;for(;i<bEnd;)map.set(b[i],i++)}if(map.has(a[aStart])){const index=map.get(a[aStart]);if(bStart<index&&index<bEnd){let i=aStart,sequence=1;for(;++i<aEnd&&i<bEnd&&map.get(a[i])===index+sequence;)sequence++;if(sequence>index-bStart){const node=get(a[aStart],0);for(;bStart<index;)parentNode.insertBefore(get(b[bStart++],1),node)}else parentNode.replaceChild(get(b[bStart++],1),get(a[aStart++],-1))}else aStart++}else parentNode.removeChild(get(a[aStart++],-1))}return b},"udomdiff"),{isArray,prototype}=Array,{indexOf}=prototype,{createDocumentFragment,createElement,createElementNS,createTextNode,createTreeWalker,importNode}=new Proxy({},{get:(_,method)=>document[method].bind(document)}),createHTML=__name2(html2=>{const template=createElement("template");return template.innerHTML=html2,template.content},"createHTML");let xml;const createSVG=__name2(svg2=>{xml||(xml=createElementNS("http://www.w3.org/2000/svg","svg")),xml.innerHTML=svg2;const content=createDocumentFragment();return content.append(...xml.childNodes),content},"createSVG"),createContent=__name2((text2,svg2)=>svg2?createSVG(text2):createHTML(text2),"createContent"),reducePath=__name2(({childNodes},i)=>childNodes[i],"reducePath"),diff=__name2((comment,oldNodes,newNodes)=>udomdiff(comment.parentNode,oldNodes,newNodes,diffable,comment),"diff"),handleAnything=__name2(comment=>{let oldValue,text2,nodes=[];const anyContent=__name2(newValue=>{switch(typeof newValue){case"string":case"number":case"boolean":oldValue!==newValue&&(oldValue=newValue,text2||(text2=createTextNode("")),text2.data=newValue,nodes=diff(comment,nodes,[text2]));break;case"object":case"undefined":if(newValue==null){oldValue!=newValue&&(oldValue=newValue,nodes=diff(comment,nodes,[]));break}if(isArray(newValue)){oldValue=newValue,newValue.length===0?nodes=diff(comment,nodes,[]):typeof newValue[0]=="object"?nodes=diff(comment,nodes,newValue):anyContent(String(newValue));break}if(oldValue!==newValue)if("ELEMENT_NODE"in newValue)oldValue=newValue,nodes=diff(comment,nodes,newValue.nodeType===11?[...newValue.childNodes]:[newValue]);else{const value=newValue.valueOf();value!==newValue&&anyContent(value)}break;case"function":anyContent(newValue(comment));break}},"anyContent");return anyContent},"handleAnything"),handleAttribute=__name2((node,name)=>{switch(name[0]){case"?":return boolean(node,name.slice(1),!1);case".":return setter(node,name.slice(1));case"@":return event(node,"on"+name.slice(1));case"o":if(name[1]==="n")return event(node,name)}switch(name){case"ref":return ref(node);case"aria":return aria(node)}return attribute(node,name)},"handleAttribute");function handlers(options){const{type,path}=options,node=path.reduceRight(reducePath,this);return type==="node"?handleAnything(node):type==="attr"?handleAttribute(node,options.name):text(node)}__name(handlers,"handlers");__name2(handlers,"handlers");const createPath=__name2(node=>{const path=[];let{parentNode}=node;for(;parentNode;)path.push(indexOf.call(parentNode.childNodes,node)),node=parentNode,{parentNode}=node;return path},"createPath"),prefix="isÂµ",cache$1=new WeakMapSet,textOnly=/^(?:textarea|script|style|title|plaintext|xmp)$/,createCache=__name2(()=>({stack:[],entry:null,wire:null}),"createCache"),createEntry=__name2((type,template)=>{const{content,updates}=mapUpdates(type,template);return{type,template,content,updates,wire:null}},"createEntry"),mapTemplate=__name2((type,template)=>{const svg2=type==="svg",text2=instrument(template,prefix,svg2),content=createContent(text2,svg2),tw=createTreeWalker(content,129),nodes=[],length=template.length-1;let i=0,search=`${prefix}${i}`;for(;i<length;){const node=tw.nextNode();if(!node)throw`bad template: ${text2}`;if(node.nodeType===8)node.data===search&&(nodes.push({type:"node",path:createPath(node)}),search=`${prefix}${++i}`);else{for(;node.hasAttribute(search);)nodes.push({type:"attr",path:createPath(node),name:node.getAttribute(search)}),node.removeAttribute(search),search=`${prefix}${++i}`;textOnly.test(node.localName)&&node.textContent.trim()===`<!--${search}-->`&&(node.textContent="",nodes.push({type:"text",path:createPath(node)}),search=`${prefix}${++i}`)}}return{content,nodes}},"mapTemplate"),mapUpdates=__name2((type,template)=>{const{content,nodes}=cache$1.get(template)||cache$1.set(template,mapTemplate(type,template)),fragment=importNode(content,!0),updates=nodes.map(handlers,fragment);return{content:fragment,updates}},"mapUpdates"),unroll=__name2((info,{type,template,values})=>{const length=unrollValues(info,values);let{entry}=info;(!entry||entry.template!==template||entry.type!==type)&&(info.entry=entry=createEntry(type,template));const{content,updates,wire}=entry;for(let i=0;i<length;i++)updates[i](values[i]);return wire||(entry.wire=persistent(content))},"unroll"),unrollValues=__name2(({stack},values)=>{const{length}=values;for(let i=0;i<length;i++){const hole=values[i];hole instanceof Hole?values[i]=unroll(stack[i]||(stack[i]=createCache()),hole):isArray(hole)?unrollValues(stack[i]||(stack[i]=createCache()),hole):stack[i]=null}return length<stack.length&&stack.splice(length),length},"unrollValues");class Hole{constructor(type,template,values){this.type=type,this.template=template,this.values=values}}__name(Hole,"Hole");__name2(Hole,"Hole");const tag$1=__name2(type=>{const keyed=new WeakMapSet,fixed=__name2(cache2=>(template,...values)=>unroll(cache2,{type,template,values}),"fixed");return Object.assign((template,...values)=>new Hole(type,template,values),{for(ref2,id){const memo=keyed.get(ref2)||keyed.set(ref2,new MapSet);return memo.get(id)||memo.set(id,fixed(createCache()))},node:(template,...values)=>unroll(createCache(),new Hole(type,template,values)).valueOf()})},"tag$1"),cache=new WeakMapSet,render$1=__name2((where,what)=>{const hole=typeof what=="function"?what():what,info=cache.get(where)||cache.set(where,createCache()),wire=hole instanceof Hole?unroll(info,hole):hole;return wire!==info.wire&&(info.wire=wire,where.replaceChildren(wire.valueOf())),where},"render$1"),html$1=tag$1("html"),svg=tag$1("svg"),{defineProperties}=Object,tag=__name2(original=>{const wrap=new WeakMapSet;return defineProperties(asyncTag(original),{for:{value(ref2,id){const tag2=original.for(ref2,id);return wrap.get(tag2)||wrap.set(tag2,asyncTag(tag2))}},node:{value:asyncTag(original.node)}})},"tag"),html=tag(html$1);tag(svg);const render=__name2((where,what)=>{const hole=typeof what=="function"?what():what;return Promise.resolve(hole).then(what2=>render$1(where,what2))},"render");export{html as h,render as r};
